#!/bin/bash

set -o nounset
set -o errexit
set -o pipefail # trace ERR through pipes
set -o errtrace # trace ERR through 'time command' and other functions

#set -x

BASEDIR=$(dirname ${BASH_SOURCE})
[ "$BASEDIR" == "." ] || cd $BASEDIR

function copy_files() 
{
	local FROM="$1"
	local TO="$2"

	echo "# Copying files in $FROM to $TO ..."

	while read -r FILENAME
	do
		BASENAME=$(basename $FILENAME)
		DIRNAME=$(dirname $FILENAME)
		PACKAGE=${DIRNAME#$FROM}
		PACKAGE=${PACKAGE#/}

		[ -d "${TO}/${PACKAGE}" ] || install -d "${TO}/${PACKAGE}"
		if cmp --silent "${FILENAME}" "${TO}/${PACKAGE}/${BASENAME}"
		then
			: # Files are identical. Do nothing.
		else
			echo "install -p \"${FILENAME}\" \"${TO}/${PACKAGE}\""
			install -p -C "${FILENAME}" "${TO}/${PACKAGE}"
		fi
	done < <( find $FROM -name *.groovy )
}

copy_files 'common/src/groovy' 'common3/src/main/groovy'

# vim: set ts=4 noexpandtab :
